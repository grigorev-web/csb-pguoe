{"version":3,"sources":["types.js","components/EventDiv.js","App.js","index.js"],"names":["WEEKDAYS_SHORT","MONTHS","Date","date","setDate","getDate","get_date","EventDiv","props","Array","isArray","event","category","className","href","permalink","src","image","data-spai","alt","data-spai-upd","map","cat","key","name","title","short_description","App","React","useState","range","from","to","enteredTo","events","select","type","period","state","setState","isSelectingFirstDay","day","isBeforeFirstDay","DateUtils","isDayBefore","handleResetClick","prevState","useEffect","searchParams","URLSearchParams","append","fetch","then","response","json","data","getPosts","disabledDays","before","selectedDays","highlighted","Object","entries","v","length","slug","modifiers","weekends","daysOfWeek","start","end","count","obj","ev","push","listEvents","filter","numberOfMonths","firstDayOfWeek","fromMonth","onDayClick","setHours","onDayMouseEnter","months","weekdaysShort","value","onChange","target","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f326d3ae.chunk.js","sourcesContent":["export const WEEKDAYS_SHORT = [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"];\r\nexport const MONTHS = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Сентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\"\r\n];\r\n\r\nfunction get_date() {\r\n  let date = new Date();\r\n  date.setDate(date.getDate() + 4);\r\n  return date;\r\n}\r\n\r\nexport const EVENTS = [\r\n  { id: 1, date: new Date(), title: \"title1\", content: \"content1\" },\r\n  { id: 2, date: get_date(), title: \"title2\", content: \"content2\" }\r\n];\r\n","import { BsClock } from \"react-icons/bs\";\r\n\r\nexport default function EventDiv(props) {\r\n  /*\r\n  return(\r\n    <div> Event date: {props.ev.toLocaleString()}</div>\r\n  )\r\n*/\r\n\r\n  if (!Array.isArray(props.event.category)) return null;\r\n\r\n  return (\r\n    <div className=\"post post_medium\">\r\n      <div className=\"post__image-content\">\r\n        <a href={props.event.permalink}>\r\n          <img\r\n            className=\"post__image\"\r\n            src={props.event.image}\r\n            data-spai=\"1\"\r\n            alt=\"\"\r\n            data-spai-upd=\"374\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"post__content post__content_small post__content_high\">\r\n        {props.event.category.map((cat, key) => {\r\n          return (\r\n            <a\r\n              key={key}\r\n              className=\"link post__tag\"\r\n              href=\"https://russoft.org/our-events/?events-cat=russoft-events\"\r\n            >\r\n              {cat.name}\r\n            </a>\r\n          );\r\n        })}{\" \"}\r\n        <a\r\n          href={props.event.permalink}\r\n          className=\"link post__name post__name_small\"\r\n        >\r\n          {props.event.title}{\" \"}\r\n        </a>\r\n        <div className=\"post__description\">\r\n          {props.event.short_description}(\" \")\r\n        </div>\r\n        <div className=\"post__date\">\r\n          <BsClock />\r\n          <span className=\"post__time\">{props.event.date} </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import DayPicker, { DateUtils } from \"react-day-picker\";\nimport React, { useEffect } from \"react\";\nimport \"react-day-picker/lib/style.css\";\nimport \"./styles.css\";\nimport { WEEKDAYS_SHORT, MONTHS } from \"./types\";\nimport EventDiv from \"./components/EventDiv\";\n\nfunction App() {\n  const [state, setState] = React.useState(getInitialState());\n\n  function getPosts() {\n    var searchParams = new URLSearchParams();\n    searchParams.append(\"from\", state.range.from);\n    searchParams.append(\"to\", state.range.to);\n    //console.log(searchParams);\n    fetch(\n      \"https://russoft.org/wp-content/plugins/react-calendar/api.php?action=get_events&\" +\n        searchParams\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(\"fetch data: \", data);\n\n        setState((prevState) => ({\n          ...prevState,\n          events: data\n        }));\n      });\n  }\n\n  useEffect(() => {\n    //console.log(\"did mount\", state);\n    getPosts();\n  }, []);\n\n  function getInitialState() {\n    return {\n      range: { from: null, to: null },\n      enteredTo: null,\n      events: [],\n      select: { type: \"\", period: \"\" }\n    };\n  }\n  function isSelectingFirstDay(from, to, day) {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    //console.log(\"isBeforeFirstDay:\", isBeforeFirstDay);\n    //console.log(\"from:\", from);\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  function handleDayClick(day) {\n    const { from, to } = state.range;\n    if (from < to) {\n      handleResetClick();\n      return;\n    }\n    if (from && to && day >= from && day <= to) {\n      handleResetClick();\n      return;\n    }\n    if (isSelectingFirstDay(from, to, day)) {\n      // first click\n      //console.log(day);\n      //day = new Date(day.setHours(0));\n      //console.log(day);\n      //return;\n      // console.log(\"first day\");\n      //console.log(typeof day);\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          from: new Date(day.setHours(0)),\n          to: null\n        },\n        enteredTo: day,\n        select: {\n          ...prevState.select,\n          period: \"\"\n        }\n      }));\n    } else {\n      //console.log(\"second click\"); // second click\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          ...prevState.range,\n          to: new Date(day.setHours(23, 59, 59))\n        },\n        select: {\n          ...prevState.select,\n          period: \"\"\n        },\n        enteredTo: day\n      }));\n    }\n  }\n  ///////////////////////////////////////////////////////////////////////////////\n\n  function handleDayMouseEnter(day) {\n    const { from, to } = state.range;\n    if (!isSelectingFirstDay(from, to, day)) {\n      setState((prevState) => ({\n        ...prevState,\n        enteredTo: day\n      }));\n    }\n  }\n\n  function handleResetClick() {\n    setState((prevState) => ({\n      ...prevState,\n      range: { from: null, to: null },\n      select: { type: \"\", period: \"\" }\n    }));\n    //console.log(state);\n  }\n\n  function handleSelectType(event) {\n    setState((prevState) => ({\n      ...prevState,\n      select: {\n        ...prevState.select,\n        type: event.target.value\n      }\n    }));\n  }\n\n  function handleSelectPeriod(event) {\n    switch (event.target.value) {\n      ////////////////////////\n      case \"all-period\":\n        //console.log(\"all period\");\n\n        setState((prevState) => ({\n          ...prevState,\n          range: { from: null, to: null },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: null\n        }));\n        break;\n      ///////////////////////\n      case \"last-week\":\n        // console.log(\"last-week\");\n        // let entered = new Date(new Date().setDate(new Date().getDate() + 7));\n        //console.log(\"log:\", entered);\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 7))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 7))\n        }));\n        break;\n      //////////////////////\n      case \"last-month\":\n        //console.log(\"last-month\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 31))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 31))\n        }));\n        break;\n      //////////////////////\n      case \"last-half-year\":\n        //console.log(\"last-half-year\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 180))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 180))\n        }));\n        break;\n      ///////////////////////\n      case \"last-year\":\n        //console.log(\"last-year\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 365))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 365))\n        }));\n        break;\n      ///////////////////////\n      default:\n      //console.log(\"error period\");\n    }\n  }\n  const { range, enteredTo } = state;\n  //const modifiers = { start: range.from, end: enteredTo };\n  const disabledDays = { before: state.range.from };\n  const selectedDays = [range.from, { from: range.from, to: enteredTo }]; //o: enteredTo }];\n\n  let highlighted = Object.entries(state.events).map(([k, v], key) => {\n    if (\n      state.select.type === \"russoft-events\" &&\n      Array.isArray(v.category) &&\n      v.category.length > 0 &&\n      v.category[0].slug !== \"russoft-events\"\n    )\n      return null;\n    if (\n      state.select.type === \"partners-events\" &&\n      Array.isArray(v.category) &&\n      v.category.length > 0 &&\n      v.category[0].slug !== \"partners-events\"\n    )\n      return null;\n    return new Date(v.date);\n  });\n\n  const modifiers = {\n    weekends: { daysOfWeek: [6, 0] }, // saturday, sunday\n    start: range.from,\n    end: range.to,\n    highlighted: highlighted\n  };\n\n  // Обьекты в диапазоне дат\n  let count = 0;\n  let events = [];\n  Object.entries(state.events).map(([k, obj], key) => {\n    let ev = new Date(obj.date);\n    if (\n      (ev > state.range.from && ev < state.range.to) ||\n      state.range.from == null\n    ) {\n      events.push(obj);\n      count++;\n    }\n  });\n  // Фильтр наши - не наши мероприятия\n  events = events.filter((obj) => {\n    //console.log(\"filter\", state.select.type);\n    let cat = obj.category;\n    switch (state.select.type) {\n      case \"all-events\":\n        return true;\n      case \"russoft-events\":\n        if (\n          Array.isArray(cat) &&\n          cat.length > 0 &&\n          cat[0].slug !== \"russoft-events\"\n        ) {\n          //console.log(\"Это не РУССОФТ!\", cat[0].slug);\n          count--;\n          return false;\n        }\n\n        return 1;\n      case \"partners-events\":\n        if (\n          Array.isArray(cat) &&\n          cat.length > 0 &&\n          cat[0].slug !== \"partners-events\"\n        ) {\n          count--;\n          return false;\n        }\n        return 1;\n      default:\n        return 1;\n    }\n  });\n  //console.log(\"events\", events);\n  let listEvents = events.map((v, key) => <EventDiv key={key} event={v} />);\n  //console.log(state);\n  return (\n    <div>\n      <DayPicker\n        className=\"Range\"\n        numberOfMonths={2}\n        firstDayOfWeek={1}\n        fromMonth={range.from}\n        selectedDays={selectedDays}\n        disabledDays={disabledDays}\n        modifiers={modifiers}\n        onDayClick={handleDayClick}\n        onDayMouseEnter={handleDayMouseEnter}\n        months={MONTHS}\n        weekdaysShort={WEEKDAYS_SHORT}\n      />\n      <div className=\"DayPicker-filter\">\n        <div className=\"DayPicker-filter__select\">\n          <select value={state.select.type} onChange={handleSelectType}>\n            <option value=\"all-events\">Все мероприятия</option>\n            <option value=\"russoft-events\">Мероприятия РУССОФТ</option>\n            <option value=\"partners-events\">Мероприятия партнеров</option>\n          </select>\n\n          <select value={state.select.period} onChange={handleSelectPeriod}>\n            <option value=\"all-period\">За все время</option>\n            <option value=\"last-week\">На неделю</option>\n            <option value=\"last-month\">На месяц</option>\n            <option value=\"last-half-year\">На полгода</option>\n            <option value=\"last-year\">На год</option>\n          </select>\n        </div>\n        {/* !range.from && !range.to && \"Please select the first day.\" */}\n        {/* range.from && !range.to && \"Please select the last day.\" */}\n        {/* range.from &&\n          range.to &&\n          `Selected from ${range.from.toLocaleDateString()} to\n        ${range.to.toLocaleDateString()}` */}\n        <div className=\"DayPicker-filter__clear-button\">\n          <button className=\"link\" onClick={handleResetClick}>\n            Очистить фильтр\n          </button>\n        </div>\n      </div>\n      {/*\n      <p>\n        from: {state.range.from == null ? \"null\" : state.range.from.toString()}\n      </p>\n      <p>to: {state.range.to == null ? \"null\" : state.range.to.toString()}</p>\n      <p>\n        enteredTo:{\" \"}\n        {state.enteredTo == null ? \"null\" : state.enteredTo.toString()}\n      </p>\n      */}\n      <div className=\"counter\">{count} мероприятий</div>\n      <div className=\"row row_flex\">{listEvents}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}